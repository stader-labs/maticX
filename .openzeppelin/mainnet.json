{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xcEbaFD96Df8a1Cc63ee77770296F14B68089Ab04",
      "txHash": "0x4fc88dac5b58604ed46e338e20ad48505b5467032213e285e72fa63508da8f92",
      "kind": "transparent"
    },
    {
      "address": "0xD22dd194B8ec2abEeeFAC36a69cd8898FB6C43b3",
      "txHash": "0x5bdd0d3e52b4c2cf5d43ebdd3d582540313ae179213ffe25dd37f385214a34e0",
      "kind": "transparent"
    }
  ],
  "impls": {
    "0b6f1ec20dee76d8d3157a261518fea3fb34c89d242fb5238bb39ebef0473c28": {
      "address": "0xaC72d5A7078F5E6B1661c0c4fe036573c771e568",
      "txHash": "0x64be8da66e73a9a05b7b930cfde1c7e14e3d0a92648ab9bd297cfec6db48bfc6",
      "layout": {
        "solcVersion": "0.8.7",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeManager",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IStakeManager)10090",
            "contract": "ValidatorRegistry",
            "src": "contracts/ValidatorRegistry.sol:24"
          },
          {
            "label": "maticToken",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "ValidatorRegistry",
            "src": "contracts/ValidatorRegistry.sol:25"
          },
          {
            "label": "maticX",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "ValidatorRegistry",
            "src": "contracts/ValidatorRegistry.sol:26"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ValidatorRegistry",
            "src": "contracts/ValidatorRegistry.sol:27"
          },
          {
            "label": "preferredDepositValidatorId",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "ValidatorRegistry",
            "src": "contracts/ValidatorRegistry.sol:28"
          },
          {
            "label": "preferredWithdrawalValidatorId",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "ValidatorRegistry",
            "src": "contracts/ValidatorRegistry.sol:29"
          },
          {
            "label": "validatorIdExists",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ValidatorRegistry",
            "src": "contracts/ValidatorRegistry.sol:30"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ValidatorRegistry",
            "src": "contracts/ValidatorRegistry.sol:31"
          },
          {
            "label": "polToken",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "ValidatorRegistry",
            "src": "contracts/ValidatorRegistry.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IStakeManager)10090": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e05abb354c4d614f69e578a798761ddda5b8d07b7fe48d4162ed3763880cc859": {
      "address": "0x801e30fD56b43641CcB7724b31F2401004B2609c",
      "txHash": "0x1e6f9f2efaad3c56a15b47636d232023a32509a51dc223a203d103a2fbe17832",
      "layout": {
        "solcVersion": "0.8.7",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "validatorRegistry",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IValidatorRegistry)10235",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:34"
          },
          {
            "label": "stakeManager",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IStakeManager)10090",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:35"
          },
          {
            "label": "maticToken",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1482",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:36"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:37"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:38"
          },
          {
            "label": "feePercent",
            "offset": 0,
            "slot": "256",
            "type": "t_uint16",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:39"
          },
          {
            "label": "instantPoolOwner",
            "offset": 2,
            "slot": "256",
            "type": "t_address",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:40"
          },
          {
            "label": "instantPoolMatic",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:41"
          },
          {
            "label": "instantPoolMaticX",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:42"
          },
          {
            "label": "userWithdrawalRequests",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_array(t_struct(WithdrawalRequest)9561_storage)dyn_storage)",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:43"
          },
          {
            "label": "fxStateRootTunnel",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(IFxStateRootTunnel)9539",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:44"
          },
          {
            "label": "polToken",
            "offset": 0,
            "slot": "261",
            "type": "t_contract(IERC20Upgradeable)1482",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:45"
          },
          {
            "label": "reentrancyGuardStatus",
            "offset": 0,
            "slot": "262",
            "type": "t_uint256",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(WithdrawalRequest)9561_storage)dyn_storage": {
            "label": "struct IMaticX.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)1482": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IFxStateRootTunnel)9539": {
            "label": "contract IFxStateRootTunnel",
            "numberOfBytes": "20"
          },
          "t_contract(IStakeManager)10090": {
            "label": "contract IStakeManager",
            "numberOfBytes": "20"
          },
          "t_contract(IValidatorRegistry)10235": {
            "label": "contract IValidatorRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(WithdrawalRequest)9561_storage)dyn_storage)": {
            "label": "mapping(address => struct IMaticX.WithdrawalRequest[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(WithdrawalRequest)9561_storage": {
            "label": "struct IMaticX.WithdrawalRequest",
            "members": [
              {
                "label": "validatorNonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "validatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "73dff966b763ddf8a9fa121ee935ddc46afc39defb8e28f3722ec2124ed481ee": {
      "address": "0xF841Ae2C0fd78268e3B3dab3F3C54Ab3CFDD37c7",
      "txHash": "0x9a088794ea41e7f06192287a6ccfd0e0659611db8a26358a74a71b28bbff0759",
      "layout": {
        "solcVersion": "0.8.7",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakeManager",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "ValidatorRegistry",
            "src": "contracts/ValidatorRegistry.sol:20"
          },
          {
            "label": "polygonERC20",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "ValidatorRegistry",
            "src": "contracts/ValidatorRegistry.sol:21"
          },
          {
            "label": "maticX",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "ValidatorRegistry",
            "src": "contracts/ValidatorRegistry.sol:22"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ValidatorRegistry",
            "src": "contracts/ValidatorRegistry.sol:24"
          },
          {
            "label": "preferredDepositValidatorId",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "ValidatorRegistry",
            "src": "contracts/ValidatorRegistry.sol:25"
          },
          {
            "label": "preferredWithdrawalValidatorId",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "ValidatorRegistry",
            "src": "contracts/ValidatorRegistry.sol:26"
          },
          {
            "label": "validatorIdExists",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ValidatorRegistry",
            "src": "contracts/ValidatorRegistry.sol:27"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ValidatorRegistry",
            "src": "contracts/ValidatorRegistry.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "97ae6aae8a003c84b5abe649f0f877bf5e8390e2c1617449ad84a4e328ada3cf": {
      "address": "0x9167CAd7D69daF5E1BA02D2efc9C89043B21e80f",
      "txHash": "0x61ecaab7e32261e02c3197719f94c25b243d60d6b171188c22b72e1330d6838b",
      "layout": {
        "solcVersion": "0.8.7",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "validatorRegistry",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:26"
          },
          {
            "label": "stakeManager",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:27"
          },
          {
            "label": "polygonERC20",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:28"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:30"
          },
          {
            "label": "version",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:31"
          },
          {
            "label": "feePercent",
            "offset": 0,
            "slot": "256",
            "type": "t_uint8",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:32"
          },
          {
            "label": "instantPoolOwner",
            "offset": 1,
            "slot": "256",
            "type": "t_address",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:36"
          },
          {
            "label": "instantPoolMatic",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:37"
          },
          {
            "label": "instantPoolMaticX",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:38"
          },
          {
            "label": "userWithdrawalRequests",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_array(t_struct(WithdrawalRequest)10666_storage)dyn_storage)",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:41"
          },
          {
            "label": "fxStateRootTunnel",
            "offset": 0,
            "slot": "260",
            "type": "t_address",
            "contract": "MaticX",
            "src": "contracts/MaticX.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(WithdrawalRequest)10666_storage)dyn_storage": {
            "label": "struct IMaticX.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(WithdrawalRequest)10666_storage)dyn_storage)": {
            "label": "mapping(address => struct IMaticX.WithdrawalRequest[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(WithdrawalRequest)10666_storage": {
            "label": "struct IMaticX.WithdrawalRequest",
            "members": [
              {
                "label": "validatorNonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requestEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "validatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
